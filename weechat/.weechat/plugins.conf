#
# plugins.conf -- weechat v1.0.1
#

[var]
fifo.fifo = "on"
guile.check_license = "off"
lua.check_license = "off"
perl.check_license = "off"
python.check_license = "off"
python.screen_away.away_suffix = ""
python.screen_away.command_on_attach = ""
python.screen_away.command_on_detach = ""
python.screen_away.ignore = ""
python.screen_away.ignore_relays = "off"
python.screen_away.interval = "5"
python.screen_away.message = "Detached."
python.screen_away.set_away = "on"
python.screen_away.time_format = "since %Y-%m-%d %H:%M:%S%z"
python.title.short_name = "on"
python.title.title_priority = "2"
python.toggle_nicklist.action = "hide"
python.toggle_nicklist.buffers = "irc.freenode.#haskell,irc.freenode.#archlinux,irc.freenode.#bash,irc.freenode.#git,irc.freenode.#zsh,irc.freenode.#btrfs,irc.freenode.#systemd"
ruby.check_license = "off"

[desc]
python.screen_away.away_suffix = "What to append to your nick when you're away."
python.screen_away.command_on_attach = "Commands to execute on attach, separated by semicolon"
python.screen_away.command_on_detach = "Commands to execute on detach, separated by semicolon"
python.screen_away.ignore = "Comma-separated list of servers to ignore."
python.screen_away.ignore_relays = "Only check screen status and ignore relay interfaces"
python.screen_away.interval = "How often in seconds to check screen status"
python.screen_away.message = "Away message"
python.screen_away.set_away = "Set user as away."
python.screen_away.time_format = "time format append to away message"
python.typing_counter.format = "item name to add in a bar is "tc". item format is: %P = cursor position, %L = input length, %R = reverse counting from max_chars, %C = displays how many chars are count over max_chars (default: "[%P|%L|<%R|%C>]")"
python.typing_counter.max_chars = "max number of chars to count reverse (default: "200")"
python.typing_counter.sms_buffer = "name of sms buffer (using gtalksms). This is a comma separated list (default: "bitlbee.sms")"
python.typing_counter.start_cursor_pos_at_zero = "if option on, cursor position will start counting from zero instead of one (default: "off")"
python.typing_counter.tweet_buffer = "name of tweet buffer. This is a comma separated list (default: "bitlbee.#tweet")"
python.typing_counter.warn = "turns indicator to "warn_colour" when position is reached (default: "140")"
python.typing_counter.warn_colour = "color for warn after specified number of chars (default: "red")"
python.typing_counter.warn_command = "to activate a display beep use: $beep (default: "")"
