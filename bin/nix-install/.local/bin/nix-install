#!/usr/bin/env bash
# shellcheck shell=bash
# shellcheck disable=2155,1091

# Install multi-user nix even on SELinux enabled hosts
# https://github.com/NixOS/nix/issues/2374

set -e

# shellcheck source=../../../../share/lib/.local/share/dotfiles/lib/lib.sh
source "${0%/*}/../share/dotfiles/lib/lib.sh" || exit 1

if [[ -d /nix ]]; then
	_msg 'Nix install found, please uninstall or delete /nix.'
	exit 1
fi

if _has selinuxenabled && selinuxenabled; then
	has_selinux=1
fi

# https://github.com/nix-community/nix-installers/blob/master/selinux/nix.fc
if [[ -v has_selinux ]]; then
	_msg 'Checking for presence of custom SELinux fcontext entries..'
	if ! grep -q '/nix/var/nix/profiles' < <(sudo semanage fcontext --locallist --list); then
		_msg 'Adding local SELinux fcontext entries..'
		sudo sh -c "
			semanage fcontext -a -t etc_t '/nix/store/[^/]+/etc(/.*)?'
			semanage fcontext -a -t lib_t '/nix/store/[^/]+/lib(/.*)?'
			semanage fcontext -a -t systemd_unit_file_t '/nix/store/[^/]+/lib/systemd/system(/.*)?'
			semanage fcontext -a -t man_t '/nix/store/[^/]+/man(/.*)?'
			semanage fcontext -a -t bin_t '/nix/store/[^/]+/s?bin(/.*)?'
			semanage fcontext -a -t usr_t '/nix/store/[^/]+/share(/.*)?'
			semanage fcontext -a -t var_run_t '/nix/var/nix/daemon-socket(/.*)?'
			semanage fcontext -a -t usr_t '/nix/var/nix/profiles(/per-user/[^/]+)?/[^/]+'"
	fi

	if [[ $(getenforce) == Enforcing ]]; then
		_msg 'SELinux is in enforcing mode, temporarily setting to permissive..'
		sudo setenforce 0
		trap '_msg "Restoring enforcing mode.."; sudo setenforce 1' EXIT
	fi
fi

sh <(curl --proto '=https' --tlsv1.2 -sSf curl -L https://nixos.org/nix/install) --daemon

if [[ -v has_selinux ]]; then
	_msg 'Relabeling default nix store [/nix/store]..'
	# work around restorecon hard-link limitation
	sudo sh -c 'for path in /nix/store/*; do sudo restorecon -vFR "$path"; done'
fi

# vi: set ft=sh ts=4 sw=0 sts=-1 sr noet nosi tw=80 fdm=manual:
