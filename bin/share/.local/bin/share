#!/usr/bin/env bash
# vi:set ft=sh ts=4 sw=4 noet noai:
# shellcheck shell=bash

has() {
	if hash "${1}" &>/dev/null; then
		return 0
	fi
	return 1
}

if ! has jq; then
	echo "Please make sure you have jq in your path." >&2
	exit 1
fi

if ! type clip &>/dev/null; then
	clip() {
		# use OSC 52 for kitty, alacritty and tmux inside either of them
		error() {
			printf "%s: no suitable copy method found." "$1" >&2
			return 1
		}

		extern() {
			case "$XDG_SESSION_TYPE" in
				x11)
					if has xsel; then
						xsel --input --clipboard --logfile /dev/null
					elif has xclip; then
						xclip -in -filter -select clipboard
					else
						error
					fi
					;;
				wayland)
					if has wl-copy; then
						wl-copy --paste-once
					else
						error "wl-copy missing"
					fi
					;;
				tty)
					error "tty unsupported session type"
					;;
				*)
					error "unknown session type"
					;;
			esac
		}

		if [[ $TERM_PROGRAM == tmux ]]; then
			tmux load-buffer -w /dev/fd/0
		elif [[ -v KITTY_INSTALLATION_DIR ]]; then
			kitty +kitten clipboard
		elif [[ -v ALACRITTY_SOCKET ]]; then
			#TODO: some OSC 52 magic
			extern
		else
			extern
		fi
	}
fi

share() {
	local cmd
	if has socat; then
		cmd="socat -t 5 - tcp:unsha.re:9999"
	elif has ncat; then
		cmd="ncat unsha.re 9999"
	else
		echo "Please make sure you have either socat or ncat in your path." >&2
		return 1
	fi

	local resp=$($cmd > >(tee >(jq '.' >&2)) |
		jq --raw-output \
			'{ expires, secret, url } | to_entries | .[] | "local " + .key + "=" + (.value | @sh)')

	if [[ -n $resp ]]; then
		eval "$resp"
		#shellcheck disable=2154
		clip <<<"$url"
	fi
}

share
