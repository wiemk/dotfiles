# ~/.tmux.conf
# minimum version = 2.4

# pre letter suffixes in versioning
# %if #{>=:#{version},2.6}
# display-message -p "#{version}"
# set -g status-style bg=red
# %else
# display-message -p "#{version}"
# set -g status-style bg=yellow
# %endif

run-shell 'tmux set-environment -g TMUX_VERSION $(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
run-shell "tmux set-environment -g TMUX_LOGIN_SHELL $(awk -F: '$1==u{print $7}' u=$(id -un) /etc/passwd)"

# pretty 24-Bit colors
set-option -g default-terminal "tmux-256color"
set-option -as terminal-overrides ",*256col*:RGB:Tc,gnome*:RGB,alacritty:RGB,xterm-kitty:RGB"

## styles

# suppress errors for older tmux version
set-option -gq activity-action none
set-option -g assume-paste-time 2

set-option -g visual-activity off
set-option -g visual-silence off
set-option -g bell-action any

set-option -g pane-border-style bg=default,fg=colour7
set-option -g pane-active-border-style bg=default,fg=colour6

set-option -g status-justify left
set-option -g status-interval 2
set-option -g status-position bottom
set-option -g status-style default,dim
#set-option -g status-left '##{s/root//:client_key_table}'
set-option -g status-left ''
set-option -g status-right-length 50
set-option -g status-left-length 20
set-option -g status-right '#{?copy_cursor_y,[#[bold]copy#[default]] ,}#{?#{!=:#{client_key_table},root},[#[bold]#{client_key_table}#[default]] ,}[#S@#h] [%d/%m/%y #[bold]%H:%M #[default]%Z]'

set-option -g message-style default,bold

set-option -gw mode-style default,bold
set-option -gw monitor-activity on
set-option -gw window-status-current-style default,bold
set-option -gw window-status-current-format "[#I:#W]"
set-option -gw window-status-format "#I:#W"
set-option -gw window-status-bell-style "fg=colour6 bg=default bold"
set-option -gw window-status-activity-style "fg=colour7 bg=default"
set-option -gw window-status-separator ' '


## function

# mouse
set-option -g mouse on

# use fish shell, this way we don't have to change the login shell
if-shell 'test -x /usr/bin/fish' 'set-option -g default-shell /usr/bin/fish'

# larger history / scollbuf
set-option -g history-limit 5000

# start at 1 for easier access
set-option -g base-index 1

# xterm style function key sequences for better text navigation
set-option -g xterm-keys on

# toggle window renaming off
set-option -g allow-rename off

# copy mode
set-option -gw mode-keys vi


## key bindings

# remap prefix from 'C-b' to 'C-q'
unbind-key C-q
set-option -g prefix C-q
bind-key C-q send-prefix

# copy mode
unbind-key [
bind-key C-c copy-mode
bind-key C-p paste-buffer

# we manage the clipboard ourselves
set-option -s set-clipboard off

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -selection clipboard -in >/dev/null'
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe 'xclip -selection clipboard -in >/dev/null'

# create new window at position if unoccupied
bind-key i command-prompt -p 'create window at:' 'new-window -t %1'
# append new window and swap into the given position
bind-key I command-prompt -p 'insert window at:' 'new-window -a -t %1; swap-window -t -1'

# swap window
bind-key "'" command-prompt -p 'swap window with #:' 'swap-window -t %1'
bind-key * command-prompt -p 'swap window with #:' 'swap-window -t %1'

# select / move window
bind-key '#' command-prompt -p 'index #:' "select-window -t ':%%'"
bind-key + command-prompt -p 'move window to #:' "move-window -t '%%'"

# compact windows
bind-key '~' move-window -r\; display-message "windows compacted"

# new window with login shell
bind-key B run-shell 'tmux new-window "$TMUX_LOGIN_SHELL"'

# new window next to current one
bind-key C new-window -a

## panes

# move panes using arrow keys
bind-key M-k swap-pane -U
bind-key M-j swap-pane -D

# split panes using | and -
bind-key | split-window -h
bind-key - split-window -v
unbind-key '"'
unbind-key %

# lock/unlock pane
bind-key M-U select-pane -d
bind-key M-u select-pane -e

# mark all windows as read
bind-key u kill-session -C

# reload config file (change file location to your the tmux.conf you want to use)
bind-key R source-file ~/.tmux.conf\; source-file -q ~/.tmux.conf.local\; display-message "tmux.conf(.local) reloaded"

# zoom
bind-key y resize-pane -Z

# rebind window navigation to allow cycling through windows more rapidly
set-option -g repeat-time 500
bind-key -r n next-window
bind-key -r q next-window
bind-key -r Q previous-window
bind-key -r b previous-window

# display panes
bind-key p display-panes 

# reenable automatic window renaming
bind-key r set-option -w automatic-rename\; display-message "automatic-rename is now #{?automatic-rename,on,off}"

# bind kill-pane
bind-key k confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind-key x kill-pane
# bind kill-window
bind-key K confirm-before -p "kill-window #W? (y/n)" kill-window
# bind kill-session
bind-key M-k confirm-before -p "kill-session #S? (y/n)" kill-session

# toggle activity notification for current window
bind-key a set-option -w monitor-activity\; display-message "monitor-activity is now #{?monitor-activity,on,off}"

# remove latency when pressing ESC in nvim
set-option -gs escape-time 0


# switch panes using arrow keys
bind-key -n M-Left select-pane -L
bind-key -n M-Right select-pane -R
bind-key -n M-Up select-pane -U
bind-key -n M-Down select-pane -D

# cycle through windows with mouse wheel
bind-key -n -r M-WheelDownPane next-window
bind-key -n -r M-WheelUpPane previous-window


## submodes

# layout submode, press any other key to exit
bind-key Z switch-client -T layout
bind-key -T layout k resize-pane -U \; switch-client -T layout
bind-key -T layout j resize-pane -D \; switch-client -T layout
bind-key -T layout h resize-pane -L \; switch-client -T layout
bind-key -T layout l resize-pane -R \; switch-client -T layout

bind-key -T layout K resize-pane -U 5 \; switch-client -T layout
bind-key -T layout J resize-pane -D 5 \; switch-client -T layout
bind-key -T layout H resize-pane -L 5 \; switch-client -T layout
bind-key -T layout L resize-pane -R 5 \; switch-client -T layout

bind-key -T layout + move-window -t +1 \; switch-client -T layout
bind-key -T layout - move-window -t -1 \; switch-client -T layout

# tmux nesting
# We want to have single prefix key, usable both for local and remote session
# The idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session
bind-key -T root F12 \
	set-option prefix None \;\
	set-option key-table off \;\
	set-option status-position top \;\
	if-shell -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
	refresh-client -S \;\

bind-key -T off F12 \
	set-option -u prefix \;\
	set-option -u key-table \;\
	set-option -u status-position \;\
	refresh-client -S

## local override
source-file -q ~/.tmux.conf.local

#EOF
