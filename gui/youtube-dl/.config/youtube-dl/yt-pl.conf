# don't contact the "debugging" server
--no-call-home

# in case parsing breaks
--abort-on-error

# resume downloads
-c

# no overwrite
-w

# write metadata to file attributes
--xattrs
--no-mtime

# download complete playlist if applicable
--yes-playlist

# use best audio format available for m4a container
--prefer-free-formats
-f 'bestaudio[ext=webm]/bestaudio[ext=m4a]/bestaudio'

# always extract audio
-x

# if we transcode, use best quality
--audio-quality 0

# metadata
#--embed-thumbnail
--add-metadata
--metadata-from-title "%(artist)s - %(title)s"

# output location
-o "$HOME/Music/Youtube/%(playlist_title)s [%(playlist_id)s]/%(title)s.%(ext)s"

# normalize audio levels
--exec 'r128gain --opus-output-gain {} && opustrackno {}'

# don't bypass geo restrictions
--no-geo-bypass

# fake user agent, sadly
--user-agent 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.152 Safari/537.36'

# avoid captchas
# sqlite3 -separator $'\t' cookies.sqlite <<- EOF
#     .mode tabs
#     .header off
#     select host,
#     case substr(host,1,1)='.' when 0 then 'FALSE' else 'TRUE' end,
#     path,
#     case isSecure when 0 then 'FALSE' else 'TRUE' end,
#     expiry,
#     name,
#     value
#     from moz_cookies where host like "%youtube%";
# EOF
# sed -i 's/ \+ /\t/g' "<in>"
# curl -b <in> --cookie-jar <out> 'https://youtube.com'
#--cookies ~/.local/share/youtube-dl/yt.txt

# don't trigger google's bot detection
--sleep-interval 2
--max-sleep-interval 4
#--playlist-random

