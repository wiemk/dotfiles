#!/usr/bin/env bash
# shellcheck shell=bash
# shellcheck disable=2155

# shellcheck source=../../lib/common.sh
source "${0%/*}/../share/dotfiles/lib/common.sh" || exit 1

if _has mksquashfs; then
	mksfs() {
		trap 'command rm -f -- "${dst}/acl.log"' RETURN

		local flag_dry=0 \
			flag_root=0 \
			opt_fast=

		while :; do
			case ${1-} in
				-h | --help)
					cat <<-'HELP'

						Flags:
							-d|--dry-run : dry-run, shows execution pipeline
							-s|--store   : lz4 compression
							-r|--root    : run with sudo

						Pos:
							<src> [<dst/>]

					HELP
					return 0
					;;
				-d | --dry-run) flag_dry=1 ;;
				-s | --store) opt_fast=lz4 ;;
				-r | --root) flag_root=1 ;;
				*)
					break
					;;
			esac
			shift
		done

		if (($# < 2)); then
			set -- "$1" '.'
		fi

		local -r src=$(readlink -qne -- "$1")
		local -r dst=$(readlink -qne -- "$2")
		shift 2

		local san=$(printf '%s' "$src" | tr -d '\n' | sed -E 's/\//-/g;s/^-|-$//g;s/\./dot-/g;s/\s/_/g')

		if [[ -z $src ]]; then
			_die 'Source directory does not exist:' "$src"
		fi

		if [[ -z $dst ]]; then
			_die 'Target directory does not exist:' "$dst"
		fi

		if [[ -z $san ]]; then
			san='root'
		fi
		local out
		printf -v out '%s/%s-%u.sfs' "$dst" "$san" "$EPOCHSECONDS"

		local cmd=$(
			{
				#shellcheck disable=SC2030,SC2031
				export SHOW_CMD=1
				if _has getfacl; then
					_invoke-cmd getfacl -Rs "'$src'"
					printf '>%s' "'${dst}/acl.log'"
					printf ' &&\n' >&2
				fi
				_invoke-cmd mksquashfs "'$src'" "'${dst}/acl.log'" "'$out'" -not-reproducible -noappend -xattrs -comp "${opt_fast:-zstd}" -keep-as-directory -progress -wildcards "${@:-}"
			} 2>&1
		)

		if ((flag_root)); then
			printf -v cmd "command sudo -- bash -c '%s &&\nchown --quiet --preserve-root %u:%u %s'" "$cmd" "$(id -u)" "$(id -g)" "'$out'"
		fi

		if ((flag_dry)); then
			_msg "$cmd"
		else
			_invoke-cmd "$cmd"
		fi
	}
fi

mksfs "$@"

# vi: set ft=sh ts=4 sw=0 sts=-1 sr noet nosi tw=80 fdm=manual: